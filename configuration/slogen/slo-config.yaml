apiVersion: openslo/v1alpha
kind: SLO
metadata:
  displayName: SLO descriptive name
  name: slo-minimal-name   # only '-' is allowed apart from alphanumeric chars, '-' not allowed in start or end
spec:
  service: my-service
  description: slo description to be added in dashboard text panel
  budgetingMethod: Occurrences
  objectives:
    - ratioMetrics:
        total: # sumo query to filter out all the messages counting requests for this slo
          source: sumologic
          queryType: Logs
          query: '_sourceCategory=my-service | where api_path="/login"'
        good: # condition to filter out healthy request/events
          source: sumologic
          queryType: Logs
          query: '(responseTime) < 500 and (statusCode matches /[2-3][0-9]{2}/ )'
        incremental: true
      displayName: delay less than 350
      target: 0.98
fields: # fields from log to retain
  region: "aws_region"    # log field as it is
  deployment: 'if(isNull(deployment),"dev",deployment)' # using an expression
labels:
  tier: 0                 # static labels to include in SLI view, that are not present in the log messages
alerts:
  burnRate: # Multiwindow, Multi-Burn-Rate Alerts, explained here https://sre.google/workbook/alerting-on-slos/ 
    - shortWindow: '10m' # the smaller window
      shortLimit: 14  # limit for the burn rate ratio, 14 denotes the error consumed in the window were 14 times the allowed number  
      longWindow: '1h'
      longLimit: 14
      notifications: # one or more notification channels
        - connectionType: 'Email'
          recipients: ['youremailid@email.com']
          timeZone: 'PST'
          triggerFor:
            - Warning
            - ResolvedWarning
        - connectionType: 'PagerDuty'
          connectionID: '1234abcd'  # id of pagerduty connection created in Sumo Logic
          triggerFor:
            - Critical
            - ResolvedCritical
        - connectionType: 'Webhook'
          connectionID: '0000000000ABC123'  # id of pagerduty connection created in Sumo Logic
          triggerFor:
            - Critical
            - ResolvedCritical